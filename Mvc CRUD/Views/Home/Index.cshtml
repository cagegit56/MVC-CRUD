<!DOCTYPE html>
    <html>
    <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page1</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    </head>
    <body>

    @using Mvc_CRUD.Pagination

    @model PaginateResponse<List<Chat>>

    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <br />
        <br />
        <h2 class="mt-4">All Data</h2>
    </div>

    <input type="text" id="searchBy" placeholder="Search messages..." class="form-control mb-3" />
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>UserName</th>
                <th>ToUser</th>
                <th>Message</th>
                <th>Sent On</th>
                <th>Action</th>
            </tr>
        </thead>

        <tbody id="tableData">
            @{
                foreach (var data in Model.Data)
                {
                    <tr>
                        <td>@data.Id</td>
                        <td>@data.UserName</td>
                        <td>@data.ToUser</td>
                        <td>@data.Message</td>
                        <td>@data.SentOn</td>
                        <td>
                            <a asp-action="AddData" asp-route-id="@data.Id" class="btn btn-sm btn-outline-primary me-1">Edit</a>
                            <a asp-action="DeleteData" asp-route-id="@data.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                        </td>
                    </tr>
                }
            }

        </tbody>

    </table>

    @{
        var pageSize = Model.PageSize == 50 ? 5 : Model.PageSize;
        Model.PageSize = pageSize;
    }

    <div class="d-flex justify-content-between align-items-center mt-3">
    <div class="d-flex align-items-center">
        <label for="pageSize" class="me-2 mb-0">rows per page:</label>
        <select id="pageSize" class="form-select form-select-sm w-auto">
                <option value="5" selected>5</option>
                <option value="10">10</option>
                <option value="20">20</option>
        </select>
    </div>

    <div class="d-flex align-items-center">
        <span class="me-3" id="paginationInfo">
            @( (Model.PageNumber - 1) * Model.PageSize + 1 )
            –
            @( Math.Min(Model.PageNumber * Model.PageSize, Model.TotalRecords) )
            of @Model.TotalRecords
        </span>

        <button class="btn btn-sm btn-outline-primary me-1" id="prevPage"
                data-page="@(Model.PageNumber - 1)" @(Model.PageNumber == 1 ? "disabled" : "")>
            <i class="bi bi-chevron-left"></i>
        </button>

        <button class="btn btn-sm btn-outline-primary" id="nextPage"
                data-page="@(Model.PageNumber + 1)" @(Model.PageNumber == Model.TotalPages ? "disabled" : "")>
            <i class="bi bi-chevron-right"></i>
        </button>
    </div>
    </div>

    @section Scripts
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
            if (@Model.PageSize == 5) {
                loadPage(1, 5, "");
            }
            });

            let currentPage = @Model.PageNumber;
            let pageSize = @Model.PageSize;
            let searchKey = "";

            document.getElementById("pageSize").addEventListener("change", function () {
                pageSize = this.value;
                loadPage(1, pageSize, searchKey);
            });

            document.getElementById("prevPage").addEventListener("click", function () {
                if (!this.disabled) {
                    loadPage(currentPage - 1, pageSize, searchKey);
                }
            });

            document.getElementById("nextPage").addEventListener("click", function () {
                if (!this.disabled) {
                    loadPage(currentPage + 1, pageSize, searchKey);
                }
            });

            let debounceTimer;
            document.getElementById("searchBy").addEventListener("keyup", function () {
                clearTimeout(debounceTimer);
                searchKey = this.value;

                debounceTimer = setTimeout(() => {
                    loadPage(1, pageSize, searchKey);
                }, 300);
            });

            function loadPage(page, size, filter) {
                fetch(`/Home/Index?pageNumber=${page}&pageSize=${size}&filter=${encodeURIComponent(filter)}`, {
                    headers: { "X-Requested-With": "XMLHttpRequest" }
                })
                .then(res => res.json())
                .then(info => {
                    let rows = info.data ?? info;
                    let tableInfo = document.getElementById("tableData");
                    tableInfo.innerHTML = "";

                    if (!rows || rows.length === 0) {
                        tableInfo.innerHTML =
                            `<tr><td colspan="6" class="text-center fw-bold">No Matching Data Found</td></tr>`;
                    } else {
                        rows.forEach(item => {
                            let row = `
                                <tr>
                                    <td>${item.id ?? item.Id}</td>
                                    <td>${item.userName ?? item.UserName}</td>
                                    <td>${item.toUser ?? item.ToUser}</td>
                                    <td>${item.message ?? item.Message}</td>
                                    <td>${item.sentOn ?? item.SentOn}</td>
                                    <td>
                                        <a href="/Home/AddData/${item.id ?? item.Id}" class="btn btn-sm btn-outline-primary me-1">Edit</a>
                                        <a href="/Home/DeleteData/${item.id ?? item.Id}" class="btn btn-sm btn-outline-danger">Delete</a>
                                    </td>
                                </tr>`;
                            tableInfo.innerHTML += row;
                        });
                    }

                    currentPage = info.pageNumber ?? page;
                    document.getElementById("paginationInfo").innerText =
                        `${(currentPage - 1) * size + 1} – ${Math.min(currentPage * size, info.totalRecords ?? rows.length)} of ${info.totalRecords ?? rows.length}`;

                    document.getElementById("prevPage").disabled = (currentPage === 1);
                    document.getElementById("nextPage").disabled = (currentPage === (info.totalPages ?? 1));
                });
            }
        </script>

    }
    
    </body>
    </html>


